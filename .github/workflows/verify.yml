name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies and install cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun
            ~/.cache/bun
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Cache TypeScript build info
        uses: actions/cache@v4
        with:
          path: node_modules/.cache/tsconfig*.tsbuildinfo
          key: ${{ runner.os }}-ts-${{ hashFiles('**/tsconfig*.json') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-ts-

      - name: Install dependencies
        run: bun install

      - name: Create .env file
        run: cp .env.example .env

      - name: Check formatting
        run: bun run format:check

      - name: Check for template placeholders
        run: |
          if grep -r "Steve Kinney" src/ README.md bunfig.toml package.json 2>/dev/null; then
            echo "❌ Template placeholders found! Please replace:"
            echo "   - Steve Kinney with your name or organization"
            exit 1
          fi
          echo "✅ No template placeholders found"

      - name: Lint
        run: bun run lint

      - name: Check types
        run: bun run typecheck

      - name: Test
        run: bun run test:coverage

      - name: Build
        run: bun run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "❌ Build output directory 'dist' not found!"
            exit 1
          fi
          if [ ! -f "dist/index.js" ]; then
            echo "❌ Build output file 'dist/index.js' not found!"
            exit 1
          fi
          echo "✅ Build output verified"

      - name: Install Playwright browsers
        run: bunx playwright install chromium --with-deps

      - name: Run end-to-end tests (smoke test)
        run: bunx playwright test --project=chromium tests/end-to-end/basic-operations.spec.ts
        env:
          CI: true
